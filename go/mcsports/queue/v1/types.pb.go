// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: mcsports/queue/v1/types.proto

package queuev1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type QueueStatus int32

const (
	QueueStatus_NOT_ENOUGH_PLAYERS QueueStatus = 0
	QueueStatus_SEARCHING_SERVER   QueueStatus = 1
	QueueStatus_COUNTDOWN          QueueStatus = 2
	QueueStatus_COUNTDOWN_FAST     QueueStatus = 3
)

// Enum value maps for QueueStatus.
var (
	QueueStatus_name = map[int32]string{
		0: "NOT_ENOUGH_PLAYERS",
		1: "SEARCHING_SERVER",
		2: "COUNTDOWN",
		3: "COUNTDOWN_FAST",
	}
	QueueStatus_value = map[string]int32{
		"NOT_ENOUGH_PLAYERS": 0,
		"SEARCHING_SERVER":   1,
		"COUNTDOWN":          2,
		"COUNTDOWN_FAST":     3,
	}
)

func (x QueueStatus) Enum() *QueueStatus {
	p := new(QueueStatus)
	*p = x
	return p
}

func (x QueueStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QueueStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_mcsports_queue_v1_types_proto_enumTypes[0].Descriptor()
}

func (QueueStatus) Type() protoreflect.EnumType {
	return &file_mcsports_queue_v1_types_proto_enumTypes[0]
}

func (x QueueStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QueueStatus.Descriptor instead.
func (QueueStatus) EnumDescriptor() ([]byte, []int) {
	return file_mcsports_queue_v1_types_proto_rawDescGZIP(), []int{0}
}

type Queue struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	UniqueId        string                 `protobuf:"bytes,1,opt,name=unique_id,json=uniqueId,proto3" json:"unique_id,omitempty"`
	Type            string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Status          QueueStatus            `protobuf:"varint,3,opt,name=status,proto3,enum=mcsports.queue.v1.QueueStatus" json:"status,omitempty"`
	CountdownMillis *int64                 `protobuf:"varint,4,opt,name=countdown_millis,json=countdownMillis,proto3,oneof" json:"countdown_millis,omitempty"`
	PlayerIds       []string               `protobuf:"bytes,5,rep,name=player_ids,json=playerIds,proto3" json:"player_ids,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Queue) Reset() {
	*x = Queue{}
	mi := &file_mcsports_queue_v1_types_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Queue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Queue) ProtoMessage() {}

func (x *Queue) ProtoReflect() protoreflect.Message {
	mi := &file_mcsports_queue_v1_types_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Queue.ProtoReflect.Descriptor instead.
func (*Queue) Descriptor() ([]byte, []int) {
	return file_mcsports_queue_v1_types_proto_rawDescGZIP(), []int{0}
}

func (x *Queue) GetUniqueId() string {
	if x != nil {
		return x.UniqueId
	}
	return ""
}

func (x *Queue) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Queue) GetStatus() QueueStatus {
	if x != nil {
		return x.Status
	}
	return QueueStatus_NOT_ENOUGH_PLAYERS
}

func (x *Queue) GetCountdownMillis() int64 {
	if x != nil && x.CountdownMillis != nil {
		return *x.CountdownMillis
	}
	return 0
}

func (x *Queue) GetPlayerIds() []string {
	if x != nil {
		return x.PlayerIds
	}
	return nil
}

var File_mcsports_queue_v1_types_proto protoreflect.FileDescriptor

const file_mcsports_queue_v1_types_proto_rawDesc = "" +
	"\n" +
	"\x1dmcsports/queue/v1/types.proto\x12\x11mcsports.queue.v1\"\xd4\x01\n" +
	"\x05Queue\x12\x1b\n" +
	"\tunique_id\x18\x01 \x01(\tR\buniqueId\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x126\n" +
	"\x06status\x18\x03 \x01(\x0e2\x1e.mcsports.queue.v1.QueueStatusR\x06status\x12.\n" +
	"\x10countdown_millis\x18\x04 \x01(\x03H\x00R\x0fcountdownMillis\x88\x01\x01\x12\x1d\n" +
	"\n" +
	"player_ids\x18\x05 \x03(\tR\tplayerIdsB\x13\n" +
	"\x11_countdown_millis*^\n" +
	"\vQueueStatus\x12\x16\n" +
	"\x12NOT_ENOUGH_PLAYERS\x10\x00\x12\x14\n" +
	"\x10SEARCHING_SERVER\x10\x01\x12\r\n" +
	"\tCOUNTDOWN\x10\x02\x12\x12\n" +
	"\x0eCOUNTDOWN_FAST\x10\x03B\xc5\x01\n" +
	"\x15com.mcsports.queue.v1B\n" +
	"TypesProtoP\x01Z:github.com/bufbuild/buf-tour/gen/mcsports/queue/v1;queuev1\xa2\x02\x03MQX\xaa\x02\x11Mcsports.Queue.V1\xca\x02\x11Mcsports\\Queue\\V1\xe2\x02\x1dMcsports\\Queue\\V1\\GPBMetadata\xea\x02\x13Mcsports::Queue::V1b\x06proto3"

var (
	file_mcsports_queue_v1_types_proto_rawDescOnce sync.Once
	file_mcsports_queue_v1_types_proto_rawDescData []byte
)

func file_mcsports_queue_v1_types_proto_rawDescGZIP() []byte {
	file_mcsports_queue_v1_types_proto_rawDescOnce.Do(func() {
		file_mcsports_queue_v1_types_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_mcsports_queue_v1_types_proto_rawDesc), len(file_mcsports_queue_v1_types_proto_rawDesc)))
	})
	return file_mcsports_queue_v1_types_proto_rawDescData
}

var file_mcsports_queue_v1_types_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_mcsports_queue_v1_types_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_mcsports_queue_v1_types_proto_goTypes = []any{
	(QueueStatus)(0), // 0: mcsports.queue.v1.QueueStatus
	(*Queue)(nil),    // 1: mcsports.queue.v1.Queue
}
var file_mcsports_queue_v1_types_proto_depIdxs = []int32{
	0, // 0: mcsports.queue.v1.Queue.status:type_name -> mcsports.queue.v1.QueueStatus
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_mcsports_queue_v1_types_proto_init() }
func file_mcsports_queue_v1_types_proto_init() {
	if File_mcsports_queue_v1_types_proto != nil {
		return
	}
	file_mcsports_queue_v1_types_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_mcsports_queue_v1_types_proto_rawDesc), len(file_mcsports_queue_v1_types_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_mcsports_queue_v1_types_proto_goTypes,
		DependencyIndexes: file_mcsports_queue_v1_types_proto_depIdxs,
		EnumInfos:         file_mcsports_queue_v1_types_proto_enumTypes,
		MessageInfos:      file_mcsports_queue_v1_types_proto_msgTypes,
	}.Build()
	File_mcsports_queue_v1_types_proto = out.File
	file_mcsports_queue_v1_types_proto_goTypes = nil
	file_mcsports_queue_v1_types_proto_depIdxs = nil
}
