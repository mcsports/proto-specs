// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: mcsports/queue/v1/data.proto

package queuev1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetQueueRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	QueueId       string                 `protobuf:"bytes,1,opt,name=queue_id,json=queueId,proto3" json:"queue_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetQueueRequest) Reset() {
	*x = GetQueueRequest{}
	mi := &file_mcsports_queue_v1_data_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetQueueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQueueRequest) ProtoMessage() {}

func (x *GetQueueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mcsports_queue_v1_data_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQueueRequest.ProtoReflect.Descriptor instead.
func (*GetQueueRequest) Descriptor() ([]byte, []int) {
	return file_mcsports_queue_v1_data_proto_rawDescGZIP(), []int{0}
}

func (x *GetQueueRequest) GetQueueId() string {
	if x != nil {
		return x.QueueId
	}
	return ""
}

type GetQueueResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Queue         *Queue                 `protobuf:"bytes,1,opt,name=queue,proto3" json:"queue,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetQueueResponse) Reset() {
	*x = GetQueueResponse{}
	mi := &file_mcsports_queue_v1_data_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetQueueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQueueResponse) ProtoMessage() {}

func (x *GetQueueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mcsports_queue_v1_data_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQueueResponse.ProtoReflect.Descriptor instead.
func (*GetQueueResponse) Descriptor() ([]byte, []int) {
	return file_mcsports_queue_v1_data_proto_rawDescGZIP(), []int{1}
}

func (x *GetQueueResponse) GetQueue() *Queue {
	if x != nil {
		return x.Queue
	}
	return nil
}

type GetAllQueuesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAllQueuesRequest) Reset() {
	*x = GetAllQueuesRequest{}
	mi := &file_mcsports_queue_v1_data_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllQueuesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllQueuesRequest) ProtoMessage() {}

func (x *GetAllQueuesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mcsports_queue_v1_data_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllQueuesRequest.ProtoReflect.Descriptor instead.
func (*GetAllQueuesRequest) Descriptor() ([]byte, []int) {
	return file_mcsports_queue_v1_data_proto_rawDescGZIP(), []int{2}
}

type GetAllQueuesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Queues        []*Queue               `protobuf:"bytes,1,rep,name=queues,proto3" json:"queues,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAllQueuesResponse) Reset() {
	*x = GetAllQueuesResponse{}
	mi := &file_mcsports_queue_v1_data_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllQueuesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllQueuesResponse) ProtoMessage() {}

func (x *GetAllQueuesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mcsports_queue_v1_data_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllQueuesResponse.ProtoReflect.Descriptor instead.
func (*GetAllQueuesResponse) Descriptor() ([]byte, []int) {
	return file_mcsports_queue_v1_data_proto_rawDescGZIP(), []int{3}
}

func (x *GetAllQueuesResponse) GetQueues() []*Queue {
	if x != nil {
		return x.Queues
	}
	return nil
}

type DeleteQueueRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	QueueId       string                 `protobuf:"bytes,1,opt,name=queue_id,json=queueId,proto3" json:"queue_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteQueueRequest) Reset() {
	*x = DeleteQueueRequest{}
	mi := &file_mcsports_queue_v1_data_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteQueueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteQueueRequest) ProtoMessage() {}

func (x *DeleteQueueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mcsports_queue_v1_data_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteQueueRequest.ProtoReflect.Descriptor instead.
func (*DeleteQueueRequest) Descriptor() ([]byte, []int) {
	return file_mcsports_queue_v1_data_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteQueueRequest) GetQueueId() string {
	if x != nil {
		return x.QueueId
	}
	return ""
}

type DeleteQueueResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteQueueResponse) Reset() {
	*x = DeleteQueueResponse{}
	mi := &file_mcsports_queue_v1_data_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteQueueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteQueueResponse) ProtoMessage() {}

func (x *DeleteQueueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mcsports_queue_v1_data_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteQueueResponse.ProtoReflect.Descriptor instead.
func (*DeleteQueueResponse) Descriptor() ([]byte, []int) {
	return file_mcsports_queue_v1_data_proto_rawDescGZIP(), []int{5}
}

type UpdateQueueRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	QueueId       string                 `protobuf:"bytes,1,opt,name=queue_id,json=queueId,proto3" json:"queue_id,omitempty"`
	Updated       *Queue                 `protobuf:"bytes,2,opt,name=updated,proto3" json:"updated,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateQueueRequest) Reset() {
	*x = UpdateQueueRequest{}
	mi := &file_mcsports_queue_v1_data_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateQueueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateQueueRequest) ProtoMessage() {}

func (x *UpdateQueueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mcsports_queue_v1_data_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateQueueRequest.ProtoReflect.Descriptor instead.
func (*UpdateQueueRequest) Descriptor() ([]byte, []int) {
	return file_mcsports_queue_v1_data_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateQueueRequest) GetQueueId() string {
	if x != nil {
		return x.QueueId
	}
	return ""
}

func (x *UpdateQueueRequest) GetUpdated() *Queue {
	if x != nil {
		return x.Updated
	}
	return nil
}

type UpdateQueueResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        *Queue                 `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateQueueResponse) Reset() {
	*x = UpdateQueueResponse{}
	mi := &file_mcsports_queue_v1_data_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateQueueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateQueueResponse) ProtoMessage() {}

func (x *UpdateQueueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mcsports_queue_v1_data_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateQueueResponse.ProtoReflect.Descriptor instead.
func (*UpdateQueueResponse) Descriptor() ([]byte, []int) {
	return file_mcsports_queue_v1_data_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateQueueResponse) GetResult() *Queue {
	if x != nil {
		return x.Result
	}
	return nil
}

var File_mcsports_queue_v1_data_proto protoreflect.FileDescriptor

var file_mcsports_queue_v1_data_proto_rawDesc = string([]byte{
	0x0a, 0x1c, 0x6d, 0x63, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2f, 0x71, 0x75, 0x65, 0x75, 0x65,
	0x2f, 0x76, 0x31, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11,
	0x6d, 0x63, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x76,
	0x31, 0x1a, 0x1d, 0x6d, 0x63, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2f, 0x71, 0x75, 0x65, 0x75,
	0x65, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x2c, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x71, 0x75, 0x65, 0x75, 0x65, 0x49, 0x64, 0x22, 0x42,
	0x0a, 0x10, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2e, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x63, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x71, 0x75, 0x65,
	0x75, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x05, 0x71, 0x75, 0x65,
	0x75, 0x65, 0x22, 0x15, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x48, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x30, 0x0a, 0x06, 0x71, 0x75, 0x65, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x63, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x71, 0x75, 0x65,
	0x75, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x06, 0x71, 0x75, 0x65,
	0x75, 0x65, 0x73, 0x22, 0x2f, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x71, 0x75, 0x65,
	0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x71, 0x75, 0x65,
	0x75, 0x65, 0x49, 0x64, 0x22, 0x15, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x63, 0x0a, 0x12, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x71, 0x75, 0x65, 0x75, 0x65, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x07,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x6d, 0x63, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x22, 0x47, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x63, 0x73, 0x70, 0x6f, 0x72,
	0x74, 0x73, 0x2e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x32, 0xfd, 0x02, 0x0a, 0x09, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x53, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x12, 0x22, 0x2e, 0x6d, 0x63, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x71,
	0x75, 0x65, 0x75, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6d, 0x63, 0x73, 0x70, 0x6f, 0x72,
	0x74, 0x73, 0x2e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x0c,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x12, 0x26, 0x2e, 0x6d,
	0x63, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6d, 0x63, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e,
	0x71, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a,
	0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x25, 0x2e, 0x6d,
	0x63, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x6d, 0x63, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x71,
	0x75, 0x65, 0x75, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x0b, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x25, 0x2e, 0x6d, 0x63, 0x73,
	0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x26, 0x2e, 0x6d, 0x63, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x71, 0x75, 0x65,
	0x75, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0xc4, 0x01, 0x0a, 0x15, 0x63, 0x6f,
	0x6d, 0x2e, 0x6d, 0x63, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x71, 0x75, 0x65, 0x75, 0x65,
	0x2e, 0x76, 0x31, 0x42, 0x09, 0x44, 0x61, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01,
	0x5a, 0x3a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x75, 0x66,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x2f, 0x62, 0x75, 0x66, 0x2d, 0x74, 0x6f, 0x75, 0x72, 0x2f, 0x67,
	0x65, 0x6e, 0x2f, 0x6d, 0x63, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2f, 0x71, 0x75, 0x65, 0x75,
	0x65, 0x2f, 0x76, 0x31, 0x3b, 0x71, 0x75, 0x65, 0x75, 0x65, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x4d,
	0x51, 0x58, 0xaa, 0x02, 0x11, 0x4d, 0x63, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x11, 0x4d, 0x63, 0x73, 0x70, 0x6f, 0x72, 0x74,
	0x73, 0x5c, 0x51, 0x75, 0x65, 0x75, 0x65, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1d, 0x4d, 0x63, 0x73,
	0x70, 0x6f, 0x72, 0x74, 0x73, 0x5c, 0x51, 0x75, 0x65, 0x75, 0x65, 0x5c, 0x56, 0x31, 0x5c, 0x47,
	0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x13, 0x4d, 0x63, 0x73,
	0x70, 0x6f, 0x72, 0x74, 0x73, 0x3a, 0x3a, 0x51, 0x75, 0x65, 0x75, 0x65, 0x3a, 0x3a, 0x56, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_mcsports_queue_v1_data_proto_rawDescOnce sync.Once
	file_mcsports_queue_v1_data_proto_rawDescData []byte
)

func file_mcsports_queue_v1_data_proto_rawDescGZIP() []byte {
	file_mcsports_queue_v1_data_proto_rawDescOnce.Do(func() {
		file_mcsports_queue_v1_data_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_mcsports_queue_v1_data_proto_rawDesc), len(file_mcsports_queue_v1_data_proto_rawDesc)))
	})
	return file_mcsports_queue_v1_data_proto_rawDescData
}

var file_mcsports_queue_v1_data_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_mcsports_queue_v1_data_proto_goTypes = []any{
	(*GetQueueRequest)(nil),      // 0: mcsports.queue.v1.GetQueueRequest
	(*GetQueueResponse)(nil),     // 1: mcsports.queue.v1.GetQueueResponse
	(*GetAllQueuesRequest)(nil),  // 2: mcsports.queue.v1.GetAllQueuesRequest
	(*GetAllQueuesResponse)(nil), // 3: mcsports.queue.v1.GetAllQueuesResponse
	(*DeleteQueueRequest)(nil),   // 4: mcsports.queue.v1.DeleteQueueRequest
	(*DeleteQueueResponse)(nil),  // 5: mcsports.queue.v1.DeleteQueueResponse
	(*UpdateQueueRequest)(nil),   // 6: mcsports.queue.v1.UpdateQueueRequest
	(*UpdateQueueResponse)(nil),  // 7: mcsports.queue.v1.UpdateQueueResponse
	(*Queue)(nil),                // 8: mcsports.queue.v1.Queue
}
var file_mcsports_queue_v1_data_proto_depIdxs = []int32{
	8, // 0: mcsports.queue.v1.GetQueueResponse.queue:type_name -> mcsports.queue.v1.Queue
	8, // 1: mcsports.queue.v1.GetAllQueuesResponse.queues:type_name -> mcsports.queue.v1.Queue
	8, // 2: mcsports.queue.v1.UpdateQueueRequest.updated:type_name -> mcsports.queue.v1.Queue
	8, // 3: mcsports.queue.v1.UpdateQueueResponse.result:type_name -> mcsports.queue.v1.Queue
	0, // 4: mcsports.queue.v1.QueueData.GetQueue:input_type -> mcsports.queue.v1.GetQueueRequest
	2, // 5: mcsports.queue.v1.QueueData.GetAllQueues:input_type -> mcsports.queue.v1.GetAllQueuesRequest
	4, // 6: mcsports.queue.v1.QueueData.DeleteQueue:input_type -> mcsports.queue.v1.DeleteQueueRequest
	6, // 7: mcsports.queue.v1.QueueData.UpdateQueue:input_type -> mcsports.queue.v1.UpdateQueueRequest
	1, // 8: mcsports.queue.v1.QueueData.GetQueue:output_type -> mcsports.queue.v1.GetQueueResponse
	3, // 9: mcsports.queue.v1.QueueData.GetAllQueues:output_type -> mcsports.queue.v1.GetAllQueuesResponse
	5, // 10: mcsports.queue.v1.QueueData.DeleteQueue:output_type -> mcsports.queue.v1.DeleteQueueResponse
	7, // 11: mcsports.queue.v1.QueueData.UpdateQueue:output_type -> mcsports.queue.v1.UpdateQueueResponse
	8, // [8:12] is the sub-list for method output_type
	4, // [4:8] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_mcsports_queue_v1_data_proto_init() }
func file_mcsports_queue_v1_data_proto_init() {
	if File_mcsports_queue_v1_data_proto != nil {
		return
	}
	file_mcsports_queue_v1_types_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_mcsports_queue_v1_data_proto_rawDesc), len(file_mcsports_queue_v1_data_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_mcsports_queue_v1_data_proto_goTypes,
		DependencyIndexes: file_mcsports_queue_v1_data_proto_depIdxs,
		MessageInfos:      file_mcsports_queue_v1_data_proto_msgTypes,
	}.Build()
	File_mcsports_queue_v1_data_proto = out.File
	file_mcsports_queue_v1_data_proto_goTypes = nil
	file_mcsports_queue_v1_data_proto_depIdxs = nil
}
