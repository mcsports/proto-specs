// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: mcsports/queue/v1/event.proto

package queuev1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type QueueUpdateEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Before        *Queue                 `protobuf:"bytes,1,opt,name=before,proto3" json:"before,omitempty"`
	After         *Queue                 `protobuf:"bytes,2,opt,name=after,proto3" json:"after,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueueUpdateEvent) Reset() {
	*x = QueueUpdateEvent{}
	mi := &file_mcsports_queue_v1_event_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueueUpdateEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueueUpdateEvent) ProtoMessage() {}

func (x *QueueUpdateEvent) ProtoReflect() protoreflect.Message {
	mi := &file_mcsports_queue_v1_event_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueueUpdateEvent.ProtoReflect.Descriptor instead.
func (*QueueUpdateEvent) Descriptor() ([]byte, []int) {
	return file_mcsports_queue_v1_event_proto_rawDescGZIP(), []int{0}
}

func (x *QueueUpdateEvent) GetBefore() *Queue {
	if x != nil {
		return x.Before
	}
	return nil
}

func (x *QueueUpdateEvent) GetAfter() *Queue {
	if x != nil {
		return x.After
	}
	return nil
}

type QueueResolveEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Queue         *Queue                 `protobuf:"bytes,1,opt,name=queue,proto3" json:"queue,omitempty"`
	ServerId      string                 `protobuf:"bytes,2,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueueResolveEvent) Reset() {
	*x = QueueResolveEvent{}
	mi := &file_mcsports_queue_v1_event_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueueResolveEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueueResolveEvent) ProtoMessage() {}

func (x *QueueResolveEvent) ProtoReflect() protoreflect.Message {
	mi := &file_mcsports_queue_v1_event_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueueResolveEvent.ProtoReflect.Descriptor instead.
func (*QueueResolveEvent) Descriptor() ([]byte, []int) {
	return file_mcsports_queue_v1_event_proto_rawDescGZIP(), []int{1}
}

func (x *QueueResolveEvent) GetQueue() *Queue {
	if x != nil {
		return x.Queue
	}
	return nil
}

func (x *QueueResolveEvent) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

var File_mcsports_queue_v1_event_proto protoreflect.FileDescriptor

var file_mcsports_queue_v1_event_proto_rawDesc = string([]byte{
	0x0a, 0x1d, 0x6d, 0x63, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2f, 0x71, 0x75, 0x65, 0x75, 0x65,
	0x2f, 0x76, 0x31, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x11, 0x6d, 0x63, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x2e,
	0x76, 0x31, 0x1a, 0x1d, 0x6d, 0x63, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2f, 0x71, 0x75, 0x65,
	0x75, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x74, 0x0a, 0x10, 0x51, 0x75, 0x65, 0x75, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x06, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x63, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x73,
	0x2e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52,
	0x06, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x12, 0x2e, 0x0a, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x63, 0x73, 0x70, 0x6f, 0x72, 0x74,
	0x73, 0x2e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x52, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x22, 0x60, 0x0a, 0x11, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x05,
	0x71, 0x75, 0x65, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x63,
	0x73, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x05, 0x71, 0x75, 0x65, 0x75, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x42, 0xc5, 0x01, 0x0a, 0x15, 0x63, 0x6f,
	0x6d, 0x2e, 0x6d, 0x63, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x71, 0x75, 0x65, 0x75, 0x65,
	0x2e, 0x76, 0x31, 0x42, 0x0a, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50,
	0x01, 0x5a, 0x3a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x75,
	0x66, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2f, 0x62, 0x75, 0x66, 0x2d, 0x74, 0x6f, 0x75, 0x72, 0x2f,
	0x67, 0x65, 0x6e, 0x2f, 0x6d, 0x63, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2f, 0x71, 0x75, 0x65,
	0x75, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x71, 0x75, 0x65, 0x75, 0x65, 0x76, 0x31, 0xa2, 0x02, 0x03,
	0x4d, 0x51, 0x58, 0xaa, 0x02, 0x11, 0x4d, 0x63, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x11, 0x4d, 0x63, 0x73, 0x70, 0x6f, 0x72,
	0x74, 0x73, 0x5c, 0x51, 0x75, 0x65, 0x75, 0x65, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1d, 0x4d, 0x63,
	0x73, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x5c, 0x51, 0x75, 0x65, 0x75, 0x65, 0x5c, 0x56, 0x31, 0x5c,
	0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x13, 0x4d, 0x63,
	0x73, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x3a, 0x3a, 0x51, 0x75, 0x65, 0x75, 0x65, 0x3a, 0x3a, 0x56,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_mcsports_queue_v1_event_proto_rawDescOnce sync.Once
	file_mcsports_queue_v1_event_proto_rawDescData []byte
)

func file_mcsports_queue_v1_event_proto_rawDescGZIP() []byte {
	file_mcsports_queue_v1_event_proto_rawDescOnce.Do(func() {
		file_mcsports_queue_v1_event_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_mcsports_queue_v1_event_proto_rawDesc), len(file_mcsports_queue_v1_event_proto_rawDesc)))
	})
	return file_mcsports_queue_v1_event_proto_rawDescData
}

var file_mcsports_queue_v1_event_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_mcsports_queue_v1_event_proto_goTypes = []any{
	(*QueueUpdateEvent)(nil),  // 0: mcsports.queue.v1.QueueUpdateEvent
	(*QueueResolveEvent)(nil), // 1: mcsports.queue.v1.QueueResolveEvent
	(*Queue)(nil),             // 2: mcsports.queue.v1.Queue
}
var file_mcsports_queue_v1_event_proto_depIdxs = []int32{
	2, // 0: mcsports.queue.v1.QueueUpdateEvent.before:type_name -> mcsports.queue.v1.Queue
	2, // 1: mcsports.queue.v1.QueueUpdateEvent.after:type_name -> mcsports.queue.v1.Queue
	2, // 2: mcsports.queue.v1.QueueResolveEvent.queue:type_name -> mcsports.queue.v1.Queue
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_mcsports_queue_v1_event_proto_init() }
func file_mcsports_queue_v1_event_proto_init() {
	if File_mcsports_queue_v1_event_proto != nil {
		return
	}
	file_mcsports_queue_v1_types_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_mcsports_queue_v1_event_proto_rawDesc), len(file_mcsports_queue_v1_event_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_mcsports_queue_v1_event_proto_goTypes,
		DependencyIndexes: file_mcsports_queue_v1_event_proto_depIdxs,
		MessageInfos:      file_mcsports_queue_v1_event_proto_msgTypes,
	}.Build()
	File_mcsports_queue_v1_event_proto = out.File
	file_mcsports_queue_v1_event_proto_goTypes = nil
	file_mcsports_queue_v1_event_proto_depIdxs = nil
}
