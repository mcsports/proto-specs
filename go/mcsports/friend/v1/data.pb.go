// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: mcsports/friend/v1/data.proto

package friendv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListFriendsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	Paginated     *bool                  `protobuf:"varint,2,opt,name=paginated,proto3,oneof" json:"paginated,omitempty"`
	Page          *uint32                `protobuf:"varint,3,opt,name=page,proto3,oneof" json:"page,omitempty"`
	Amount        *uint32                `protobuf:"varint,4,opt,name=amount,proto3,oneof" json:"amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListFriendsRequest) Reset() {
	*x = ListFriendsRequest{}
	mi := &file_mcsports_friend_v1_data_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListFriendsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFriendsRequest) ProtoMessage() {}

func (x *ListFriendsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mcsports_friend_v1_data_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFriendsRequest.ProtoReflect.Descriptor instead.
func (*ListFriendsRequest) Descriptor() ([]byte, []int) {
	return file_mcsports_friend_v1_data_proto_rawDescGZIP(), []int{0}
}

func (x *ListFriendsRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *ListFriendsRequest) GetPaginated() bool {
	if x != nil && x.Paginated != nil {
		return *x.Paginated
	}
	return false
}

func (x *ListFriendsRequest) GetPage() uint32 {
	if x != nil && x.Page != nil {
		return *x.Page
	}
	return 0
}

func (x *ListFriendsRequest) GetAmount() uint32 {
	if x != nil && x.Amount != nil {
		return *x.Amount
	}
	return 0
}

type ListFriendsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pages         uint32                 `protobuf:"varint,1,opt,name=pages,proto3" json:"pages,omitempty"`
	FriendId      []string               `protobuf:"bytes,2,rep,name=friend_id,json=friendId,proto3" json:"friend_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListFriendsResponse) Reset() {
	*x = ListFriendsResponse{}
	mi := &file_mcsports_friend_v1_data_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListFriendsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFriendsResponse) ProtoMessage() {}

func (x *ListFriendsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mcsports_friend_v1_data_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFriendsResponse.ProtoReflect.Descriptor instead.
func (*ListFriendsResponse) Descriptor() ([]byte, []int) {
	return file_mcsports_friend_v1_data_proto_rawDescGZIP(), []int{1}
}

func (x *ListFriendsResponse) GetPages() uint32 {
	if x != nil {
		return x.Pages
	}
	return 0
}

func (x *ListFriendsResponse) GetFriendId() []string {
	if x != nil {
		return x.FriendId
	}
	return nil
}

type ListFriendInvitesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	Paginated     *bool                  `protobuf:"varint,2,opt,name=paginated,proto3,oneof" json:"paginated,omitempty"`
	Page          *uint32                `protobuf:"varint,3,opt,name=page,proto3,oneof" json:"page,omitempty"`
	Amount        *uint32                `protobuf:"varint,4,opt,name=amount,proto3,oneof" json:"amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListFriendInvitesRequest) Reset() {
	*x = ListFriendInvitesRequest{}
	mi := &file_mcsports_friend_v1_data_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListFriendInvitesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFriendInvitesRequest) ProtoMessage() {}

func (x *ListFriendInvitesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mcsports_friend_v1_data_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFriendInvitesRequest.ProtoReflect.Descriptor instead.
func (*ListFriendInvitesRequest) Descriptor() ([]byte, []int) {
	return file_mcsports_friend_v1_data_proto_rawDescGZIP(), []int{2}
}

func (x *ListFriendInvitesRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *ListFriendInvitesRequest) GetPaginated() bool {
	if x != nil && x.Paginated != nil {
		return *x.Paginated
	}
	return false
}

func (x *ListFriendInvitesRequest) GetPage() uint32 {
	if x != nil && x.Page != nil {
		return *x.Page
	}
	return 0
}

func (x *ListFriendInvitesRequest) GetAmount() uint32 {
	if x != nil && x.Amount != nil {
		return *x.Amount
	}
	return 0
}

type ListFriendInvitesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pages         uint32                 `protobuf:"varint,1,opt,name=pages,proto3" json:"pages,omitempty"`
	FriendId      []string               `protobuf:"bytes,2,rep,name=friend_id,json=friendId,proto3" json:"friend_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListFriendInvitesResponse) Reset() {
	*x = ListFriendInvitesResponse{}
	mi := &file_mcsports_friend_v1_data_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListFriendInvitesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFriendInvitesResponse) ProtoMessage() {}

func (x *ListFriendInvitesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mcsports_friend_v1_data_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFriendInvitesResponse.ProtoReflect.Descriptor instead.
func (*ListFriendInvitesResponse) Descriptor() ([]byte, []int) {
	return file_mcsports_friend_v1_data_proto_rawDescGZIP(), []int{3}
}

func (x *ListFriendInvitesResponse) GetPages() uint32 {
	if x != nil {
		return x.Pages
	}
	return 0
}

func (x *ListFriendInvitesResponse) GetFriendId() []string {
	if x != nil {
		return x.FriendId
	}
	return nil
}

var File_mcsports_friend_v1_data_proto protoreflect.FileDescriptor

var file_mcsports_friend_v1_data_proto_rawDesc = string([]byte{
	0x0a, 0x1d, 0x6d, 0x63, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2f, 0x66, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x12, 0x6d, 0x63, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x2e, 0x76, 0x31, 0x22, 0xac, 0x01, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x09, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x01, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x48, 0x02, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x42, 0x07,
	0x0a, 0x05, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x48, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12,
	0x1b, 0x0a, 0x09, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x08, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x22, 0xb2, 0x01, 0x0a,
	0x18, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x09, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x01, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x48, 0x02, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x42,
	0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x42, 0x07, 0x0a,
	0x05, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x4e, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x70,
	0x61, 0x67, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49,
	0x64, 0x32, 0xd8, 0x01, 0x0a, 0x0a, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x6a, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x73, 0x12,
	0x2c, 0x2e, 0x6d, 0x63, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x66, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e,
	0x6d, 0x63, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x0b,
	0x4c, 0x69, 0x73, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x12, 0x26, 0x2e, 0x6d, 0x63,
	0x73, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6d, 0x63, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x66,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0xcb, 0x01, 0x0a,
	0x16, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x63, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x66, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x42, 0x09, 0x44, 0x61, 0x74, 0x61, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x62, 0x75, 0x66, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2f, 0x62, 0x75, 0x66, 0x2d, 0x74, 0x6f,
	0x75, 0x72, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x6d, 0x63, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2f,
	0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x2f, 0x76, 0x31, 0x3b, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x76, 0x31, 0xa2, 0x02, 0x03, 0x4d, 0x46, 0x58, 0xaa, 0x02, 0x12, 0x4d, 0x63, 0x73, 0x70, 0x6f,
	0x72, 0x74, 0x73, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x12,
	0x4d, 0x63, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x5c, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5c,
	0x56, 0x31, 0xe2, 0x02, 0x1e, 0x4d, 0x63, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x5c, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0xea, 0x02, 0x14, 0x4d, 0x63, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x3a, 0x3a,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
})

var (
	file_mcsports_friend_v1_data_proto_rawDescOnce sync.Once
	file_mcsports_friend_v1_data_proto_rawDescData []byte
)

func file_mcsports_friend_v1_data_proto_rawDescGZIP() []byte {
	file_mcsports_friend_v1_data_proto_rawDescOnce.Do(func() {
		file_mcsports_friend_v1_data_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_mcsports_friend_v1_data_proto_rawDesc), len(file_mcsports_friend_v1_data_proto_rawDesc)))
	})
	return file_mcsports_friend_v1_data_proto_rawDescData
}

var file_mcsports_friend_v1_data_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_mcsports_friend_v1_data_proto_goTypes = []any{
	(*ListFriendsRequest)(nil),        // 0: mcsports.friend.v1.ListFriendsRequest
	(*ListFriendsResponse)(nil),       // 1: mcsports.friend.v1.ListFriendsResponse
	(*ListFriendInvitesRequest)(nil),  // 2: mcsports.friend.v1.ListFriendInvitesRequest
	(*ListFriendInvitesResponse)(nil), // 3: mcsports.friend.v1.ListFriendInvitesResponse
}
var file_mcsports_friend_v1_data_proto_depIdxs = []int32{
	2, // 0: mcsports.friend.v1.FriendData.ListInvites:input_type -> mcsports.friend.v1.ListFriendInvitesRequest
	0, // 1: mcsports.friend.v1.FriendData.ListFriends:input_type -> mcsports.friend.v1.ListFriendsRequest
	3, // 2: mcsports.friend.v1.FriendData.ListInvites:output_type -> mcsports.friend.v1.ListFriendInvitesResponse
	1, // 3: mcsports.friend.v1.FriendData.ListFriends:output_type -> mcsports.friend.v1.ListFriendsResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_mcsports_friend_v1_data_proto_init() }
func file_mcsports_friend_v1_data_proto_init() {
	if File_mcsports_friend_v1_data_proto != nil {
		return
	}
	file_mcsports_friend_v1_data_proto_msgTypes[0].OneofWrappers = []any{}
	file_mcsports_friend_v1_data_proto_msgTypes[2].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_mcsports_friend_v1_data_proto_rawDesc), len(file_mcsports_friend_v1_data_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_mcsports_friend_v1_data_proto_goTypes,
		DependencyIndexes: file_mcsports_friend_v1_data_proto_depIdxs,
		MessageInfos:      file_mcsports_friend_v1_data_proto_msgTypes,
	}.Build()
	File_mcsports_friend_v1_data_proto = out.File
	file_mcsports_friend_v1_data_proto_goTypes = nil
	file_mcsports_friend_v1_data_proto_depIdxs = nil
}
