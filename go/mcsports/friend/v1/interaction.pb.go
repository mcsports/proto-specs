// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: mcsports/friend/v1/interaction.proto

package friendv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ApproveFriendRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApproveFriendRequest) Reset() {
	*x = ApproveFriendRequest{}
	mi := &file_mcsports_friend_v1_interaction_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApproveFriendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveFriendRequest) ProtoMessage() {}

func (x *ApproveFriendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mcsports_friend_v1_interaction_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveFriendRequest.ProtoReflect.Descriptor instead.
func (*ApproveFriendRequest) Descriptor() ([]byte, []int) {
	return file_mcsports_friend_v1_interaction_proto_rawDescGZIP(), []int{0}
}

func (x *ApproveFriendRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

type ApproveFriendResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApproveFriendResponse) Reset() {
	*x = ApproveFriendResponse{}
	mi := &file_mcsports_friend_v1_interaction_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApproveFriendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveFriendResponse) ProtoMessage() {}

func (x *ApproveFriendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mcsports_friend_v1_interaction_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveFriendResponse.ProtoReflect.Descriptor instead.
func (*ApproveFriendResponse) Descriptor() ([]byte, []int) {
	return file_mcsports_friend_v1_interaction_proto_rawDescGZIP(), []int{1}
}

type RemoveFriendRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FriendId      string                 `protobuf:"bytes,1,opt,name=friend_id,json=friendId,proto3" json:"friend_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveFriendRequest) Reset() {
	*x = RemoveFriendRequest{}
	mi := &file_mcsports_friend_v1_interaction_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveFriendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveFriendRequest) ProtoMessage() {}

func (x *RemoveFriendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mcsports_friend_v1_interaction_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveFriendRequest.ProtoReflect.Descriptor instead.
func (*RemoveFriendRequest) Descriptor() ([]byte, []int) {
	return file_mcsports_friend_v1_interaction_proto_rawDescGZIP(), []int{2}
}

func (x *RemoveFriendRequest) GetFriendId() string {
	if x != nil {
		return x.FriendId
	}
	return ""
}

type RemoveFriendResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveFriendResponse) Reset() {
	*x = RemoveFriendResponse{}
	mi := &file_mcsports_friend_v1_interaction_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveFriendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveFriendResponse) ProtoMessage() {}

func (x *RemoveFriendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mcsports_friend_v1_interaction_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveFriendResponse.ProtoReflect.Descriptor instead.
func (*RemoveFriendResponse) Descriptor() ([]byte, []int) {
	return file_mcsports_friend_v1_interaction_proto_rawDescGZIP(), []int{3}
}

type InviteFriendRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InviteFriendRequest) Reset() {
	*x = InviteFriendRequest{}
	mi := &file_mcsports_friend_v1_interaction_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InviteFriendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteFriendRequest) ProtoMessage() {}

func (x *InviteFriendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mcsports_friend_v1_interaction_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteFriendRequest.ProtoReflect.Descriptor instead.
func (*InviteFriendRequest) Descriptor() ([]byte, []int) {
	return file_mcsports_friend_v1_interaction_proto_rawDescGZIP(), []int{4}
}

func (x *InviteFriendRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

type InviteFriendResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InviteFriendResponse) Reset() {
	*x = InviteFriendResponse{}
	mi := &file_mcsports_friend_v1_interaction_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InviteFriendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteFriendResponse) ProtoMessage() {}

func (x *InviteFriendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mcsports_friend_v1_interaction_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteFriendResponse.ProtoReflect.Descriptor instead.
func (*InviteFriendResponse) Descriptor() ([]byte, []int) {
	return file_mcsports_friend_v1_interaction_proto_rawDescGZIP(), []int{5}
}

type RejectFriendRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FriendId      string                 `protobuf:"bytes,1,opt,name=friend_id,json=friendId,proto3" json:"friend_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RejectFriendRequest) Reset() {
	*x = RejectFriendRequest{}
	mi := &file_mcsports_friend_v1_interaction_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RejectFriendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RejectFriendRequest) ProtoMessage() {}

func (x *RejectFriendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mcsports_friend_v1_interaction_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RejectFriendRequest.ProtoReflect.Descriptor instead.
func (*RejectFriendRequest) Descriptor() ([]byte, []int) {
	return file_mcsports_friend_v1_interaction_proto_rawDescGZIP(), []int{6}
}

func (x *RejectFriendRequest) GetFriendId() string {
	if x != nil {
		return x.FriendId
	}
	return ""
}

type RejectFriendResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RejectFriendResponse) Reset() {
	*x = RejectFriendResponse{}
	mi := &file_mcsports_friend_v1_interaction_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RejectFriendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RejectFriendResponse) ProtoMessage() {}

func (x *RejectFriendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mcsports_friend_v1_interaction_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RejectFriendResponse.ProtoReflect.Descriptor instead.
func (*RejectFriendResponse) Descriptor() ([]byte, []int) {
	return file_mcsports_friend_v1_interaction_proto_rawDescGZIP(), []int{7}
}

type JumpRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FriendId      string                 `protobuf:"bytes,1,opt,name=friend_id,json=friendId,proto3" json:"friend_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JumpRequest) Reset() {
	*x = JumpRequest{}
	mi := &file_mcsports_friend_v1_interaction_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JumpRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JumpRequest) ProtoMessage() {}

func (x *JumpRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mcsports_friend_v1_interaction_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JumpRequest.ProtoReflect.Descriptor instead.
func (*JumpRequest) Descriptor() ([]byte, []int) {
	return file_mcsports_friend_v1_interaction_proto_rawDescGZIP(), []int{8}
}

func (x *JumpRequest) GetFriendId() string {
	if x != nil {
		return x.FriendId
	}
	return ""
}

type JumpResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServerId      string                 `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JumpResponse) Reset() {
	*x = JumpResponse{}
	mi := &file_mcsports_friend_v1_interaction_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JumpResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JumpResponse) ProtoMessage() {}

func (x *JumpResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mcsports_friend_v1_interaction_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JumpResponse.ProtoReflect.Descriptor instead.
func (*JumpResponse) Descriptor() ([]byte, []int) {
	return file_mcsports_friend_v1_interaction_proto_rawDescGZIP(), []int{9}
}

func (x *JumpResponse) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

type SendMessageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FriendId      string                 `protobuf:"bytes,1,opt,name=friend_id,json=friendId,proto3" json:"friend_id,omitempty"`
	Component     *AdventureComponent    `protobuf:"bytes,2,opt,name=component,proto3" json:"component,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendMessageRequest) Reset() {
	*x = SendMessageRequest{}
	mi := &file_mcsports_friend_v1_interaction_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageRequest) ProtoMessage() {}

func (x *SendMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mcsports_friend_v1_interaction_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageRequest.ProtoReflect.Descriptor instead.
func (*SendMessageRequest) Descriptor() ([]byte, []int) {
	return file_mcsports_friend_v1_interaction_proto_rawDescGZIP(), []int{10}
}

func (x *SendMessageRequest) GetFriendId() string {
	if x != nil {
		return x.FriendId
	}
	return ""
}

func (x *SendMessageRequest) GetComponent() *AdventureComponent {
	if x != nil {
		return x.Component
	}
	return nil
}

type SendMessageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendMessageResponse) Reset() {
	*x = SendMessageResponse{}
	mi := &file_mcsports_friend_v1_interaction_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageResponse) ProtoMessage() {}

func (x *SendMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mcsports_friend_v1_interaction_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageResponse.ProtoReflect.Descriptor instead.
func (*SendMessageResponse) Descriptor() ([]byte, []int) {
	return file_mcsports_friend_v1_interaction_proto_rawDescGZIP(), []int{11}
}

type ReplyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Component     *AdventureComponent    `protobuf:"bytes,1,opt,name=component,proto3" json:"component,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReplyRequest) Reset() {
	*x = ReplyRequest{}
	mi := &file_mcsports_friend_v1_interaction_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyRequest) ProtoMessage() {}

func (x *ReplyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mcsports_friend_v1_interaction_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyRequest.ProtoReflect.Descriptor instead.
func (*ReplyRequest) Descriptor() ([]byte, []int) {
	return file_mcsports_friend_v1_interaction_proto_rawDescGZIP(), []int{12}
}

func (x *ReplyRequest) GetComponent() *AdventureComponent {
	if x != nil {
		return x.Component
	}
	return nil
}

type ReplyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReplyResponse) Reset() {
	*x = ReplyResponse{}
	mi := &file_mcsports_friend_v1_interaction_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyResponse) ProtoMessage() {}

func (x *ReplyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mcsports_friend_v1_interaction_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyResponse.ProtoReflect.Descriptor instead.
func (*ReplyResponse) Descriptor() ([]byte, []int) {
	return file_mcsports_friend_v1_interaction_proto_rawDescGZIP(), []int{13}
}

var File_mcsports_friend_v1_interaction_proto protoreflect.FileDescriptor

var file_mcsports_friend_v1_interaction_proto_rawDesc = string([]byte{
	0x0a, 0x24, 0x6d, 0x63, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2f, 0x66, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x6d, 0x63, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x73,
	0x2e, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x1a, 0x1e, 0x6d, 0x63, 0x73, 0x70,
	0x6f, 0x72, 0x74, 0x73, 0x2f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x33, 0x0a, 0x14, 0x41, 0x70,
	0x70, 0x72, 0x6f, 0x76, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x17, 0x0a, 0x15, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x32, 0x0a, 0x13, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x22, 0x16, 0x0a, 0x14,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x32, 0x0a, 0x13, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x22, 0x16, 0x0a, 0x14, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x32, 0x0a, 0x13, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x49, 0x64, 0x22, 0x16, 0x0a, 0x14, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2a, 0x0a, 0x0b,
	0x4a, 0x75, 0x6d, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x66,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x22, 0x2b, 0x0a, 0x0c, 0x4a, 0x75, 0x6d, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x49, 0x64, 0x22, 0x77, 0x0a, 0x12, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x66,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x44, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6d, 0x63,
	0x73, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x64, 0x76, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x22, 0x15,
	0x0a, 0x13, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x54, 0x0a, 0x0c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6d, 0x63, 0x73, 0x70, 0x6f,
	0x72, 0x74, 0x73, 0x2e, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64,
	0x76, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x22, 0x0f, 0x0a, 0x0d, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x9b, 0x05, 0x0a,
	0x11, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x61, 0x0a, 0x0c, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x12, 0x27, 0x2e, 0x6d, 0x63, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x66, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x6d, 0x63,
	0x73, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64, 0x0a, 0x0d, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x12, 0x28, 0x2e, 0x6d, 0x63, 0x73, 0x70, 0x6f, 0x72, 0x74,
	0x73, 0x2e, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x72,
	0x6f, 0x76, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x29, 0x2e, 0x6d, 0x63, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x66, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x0c, 0x52,
	0x65, 0x6a, 0x65, 0x63, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x12, 0x27, 0x2e, 0x6d, 0x63,
	0x73, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x6d, 0x63, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e,
	0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61,
	0x0a, 0x0c, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x12, 0x27,
	0x2e, 0x6d, 0x63, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x6d, 0x63, 0x73, 0x70, 0x6f, 0x72,
	0x74, 0x73, 0x2e, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x5e, 0x0a, 0x0b, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x26, 0x2e, 0x6d, 0x63, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x66, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6d, 0x63, 0x73, 0x70, 0x6f,
	0x72, 0x74, 0x73, 0x2e, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65,
	0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4c, 0x0a, 0x05, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x20, 0x2e, 0x6d, 0x63, 0x73,
	0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6d,
	0x63, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x49, 0x0a, 0x04, 0x4a, 0x75, 0x6d, 0x70, 0x12, 0x1f, 0x2e, 0x6d, 0x63, 0x73, 0x70, 0x6f, 0x72,
	0x74, 0x73, 0x2e, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4a, 0x75, 0x6d,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6d, 0x63, 0x73, 0x70, 0x6f,
	0x72, 0x74, 0x73, 0x2e, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4a, 0x75,
	0x6d, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0xd2, 0x01, 0x0a, 0x16, 0x63,
	0x6f, 0x6d, 0x2e, 0x6d, 0x63, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x66, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x2e, 0x76, 0x31, 0x42, 0x10, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3c, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x75, 0x66, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2f, 0x62,
	0x75, 0x66, 0x2d, 0x74, 0x6f, 0x75, 0x72, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x6d, 0x63, 0x73, 0x70,
	0x6f, 0x72, 0x74, 0x73, 0x2f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x2f, 0x76, 0x31, 0x3b, 0x66,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x4d, 0x46, 0x58, 0xaa, 0x02, 0x12,
	0x4d, 0x63, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x2e,
	0x56, 0x31, 0xca, 0x02, 0x12, 0x4d, 0x63, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x5c, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1e, 0x4d, 0x63, 0x73, 0x70, 0x6f, 0x72,
	0x74, 0x73, 0x5c, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x14, 0x4d, 0x63, 0x73, 0x70, 0x6f,
	0x72, 0x74, 0x73, 0x3a, 0x3a, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x3a, 0x3a, 0x56, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_mcsports_friend_v1_interaction_proto_rawDescOnce sync.Once
	file_mcsports_friend_v1_interaction_proto_rawDescData []byte
)

func file_mcsports_friend_v1_interaction_proto_rawDescGZIP() []byte {
	file_mcsports_friend_v1_interaction_proto_rawDescOnce.Do(func() {
		file_mcsports_friend_v1_interaction_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_mcsports_friend_v1_interaction_proto_rawDesc), len(file_mcsports_friend_v1_interaction_proto_rawDesc)))
	})
	return file_mcsports_friend_v1_interaction_proto_rawDescData
}

var file_mcsports_friend_v1_interaction_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_mcsports_friend_v1_interaction_proto_goTypes = []any{
	(*ApproveFriendRequest)(nil),  // 0: mcsports.friend.v1.ApproveFriendRequest
	(*ApproveFriendResponse)(nil), // 1: mcsports.friend.v1.ApproveFriendResponse
	(*RemoveFriendRequest)(nil),   // 2: mcsports.friend.v1.RemoveFriendRequest
	(*RemoveFriendResponse)(nil),  // 3: mcsports.friend.v1.RemoveFriendResponse
	(*InviteFriendRequest)(nil),   // 4: mcsports.friend.v1.InviteFriendRequest
	(*InviteFriendResponse)(nil),  // 5: mcsports.friend.v1.InviteFriendResponse
	(*RejectFriendRequest)(nil),   // 6: mcsports.friend.v1.RejectFriendRequest
	(*RejectFriendResponse)(nil),  // 7: mcsports.friend.v1.RejectFriendResponse
	(*JumpRequest)(nil),           // 8: mcsports.friend.v1.JumpRequest
	(*JumpResponse)(nil),          // 9: mcsports.friend.v1.JumpResponse
	(*SendMessageRequest)(nil),    // 10: mcsports.friend.v1.SendMessageRequest
	(*SendMessageResponse)(nil),   // 11: mcsports.friend.v1.SendMessageResponse
	(*ReplyRequest)(nil),          // 12: mcsports.friend.v1.ReplyRequest
	(*ReplyResponse)(nil),         // 13: mcsports.friend.v1.ReplyResponse
	(*AdventureComponent)(nil),    // 14: mcsports.friend.v1.AdventureComponent
}
var file_mcsports_friend_v1_interaction_proto_depIdxs = []int32{
	14, // 0: mcsports.friend.v1.SendMessageRequest.component:type_name -> mcsports.friend.v1.AdventureComponent
	14, // 1: mcsports.friend.v1.ReplyRequest.component:type_name -> mcsports.friend.v1.AdventureComponent
	4,  // 2: mcsports.friend.v1.FriendInteraction.InviteFriend:input_type -> mcsports.friend.v1.InviteFriendRequest
	0,  // 3: mcsports.friend.v1.FriendInteraction.ApproveFriend:input_type -> mcsports.friend.v1.ApproveFriendRequest
	6,  // 4: mcsports.friend.v1.FriendInteraction.RejectFriend:input_type -> mcsports.friend.v1.RejectFriendRequest
	2,  // 5: mcsports.friend.v1.FriendInteraction.RemoveFriend:input_type -> mcsports.friend.v1.RemoveFriendRequest
	10, // 6: mcsports.friend.v1.FriendInteraction.SendMessage:input_type -> mcsports.friend.v1.SendMessageRequest
	12, // 7: mcsports.friend.v1.FriendInteraction.Reply:input_type -> mcsports.friend.v1.ReplyRequest
	8,  // 8: mcsports.friend.v1.FriendInteraction.Jump:input_type -> mcsports.friend.v1.JumpRequest
	5,  // 9: mcsports.friend.v1.FriendInteraction.InviteFriend:output_type -> mcsports.friend.v1.InviteFriendResponse
	1,  // 10: mcsports.friend.v1.FriendInteraction.ApproveFriend:output_type -> mcsports.friend.v1.ApproveFriendResponse
	7,  // 11: mcsports.friend.v1.FriendInteraction.RejectFriend:output_type -> mcsports.friend.v1.RejectFriendResponse
	3,  // 12: mcsports.friend.v1.FriendInteraction.RemoveFriend:output_type -> mcsports.friend.v1.RemoveFriendResponse
	11, // 13: mcsports.friend.v1.FriendInteraction.SendMessage:output_type -> mcsports.friend.v1.SendMessageResponse
	13, // 14: mcsports.friend.v1.FriendInteraction.Reply:output_type -> mcsports.friend.v1.ReplyResponse
	9,  // 15: mcsports.friend.v1.FriendInteraction.Jump:output_type -> mcsports.friend.v1.JumpResponse
	9,  // [9:16] is the sub-list for method output_type
	2,  // [2:9] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_mcsports_friend_v1_interaction_proto_init() }
func file_mcsports_friend_v1_interaction_proto_init() {
	if File_mcsports_friend_v1_interaction_proto != nil {
		return
	}
	file_mcsports_friend_v1_types_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_mcsports_friend_v1_interaction_proto_rawDesc), len(file_mcsports_friend_v1_interaction_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_mcsports_friend_v1_interaction_proto_goTypes,
		DependencyIndexes: file_mcsports_friend_v1_interaction_proto_depIdxs,
		MessageInfos:      file_mcsports_friend_v1_interaction_proto_msgTypes,
	}.Build()
	File_mcsports_friend_v1_interaction_proto = out.File
	file_mcsports_friend_v1_interaction_proto_goTypes = nil
	file_mcsports_friend_v1_interaction_proto_depIdxs = nil
}
